#!/bin/bash -e

if [ "$1" == "--help" -o "$1" == "-h" ]; then
  cat <<HELP
Usage: $name [date spec]
Open a text file in the '~/Documents/journal/' directory whose name is derived
from the date specified in 'date' (see date(1) for details on supported date
formats). If no date is provided, the current date will be used. If no such
file exists, a file will be created with Markdown-formatted content describing
a new journal entry for that date.
HELP
  exit
elif [ "$1" != "" ]; then
  date_opt_value=$@
else
  date_opt_value=now
fi

# Columns won't be printed for lines that begin with a delimiter. To avoid
# this, insert a marker, format into columns, and remove the marker.
function column_fixed {
  sed -e 's/^/COLUMN_FIXED_MARKER/g' | \
    column -t -s'	' | \
    sed -e 's/^COLUMN_FIXED_MARKER//g'
}

function print_next_seven_days {
  today=$(date --date $1 +%Y-%m-%d)
  next_week=$(date --date "$today + 1 week" +%Y-%m-%d)
  day_of_week=$(date --date $today +%w)

  if [ ${day_of_week} -eq "0" ]; then
    remind -c+ ~/Documents/reminders/main.rem $today
    return
  fi

  calendar=$(
    paste -d'\t' \
      <(remind -c+ ~/Documents/reminders/main.rem $today) \
      <(remind -c+ ~/Documents/reminders/main.rem $next_week) | \
      column_fixed \ |
      sed -e 's/\([+|]\)  [+|]/\1/g;s/^   //g'
  )

  start_byte=$(echo $calendar | grep -Eo "^(\+-+){${day_of_week}}" | wc --bytes)
  end_byte=$(echo $calendar | grep -Eo "^(\+-+){$((day_of_week + 7))}" | wc --bytes)

  echo "$calendar" | cut --bytes ${start_byte}-${end_byte}
}

date_opt="--date=$date_opt_value"

date_str_abbrev=$(date "$date_opt" +%y.%m.%d)
date_str_long=$(date "$date_opt" +%Y-%m-%d)
file_name=~/Documents/journal/$date_str_abbrev.md

if [[ ! -f $file_name ]]; then
  cat >> $file_name <<HERE
# $date_str_abbrev

$(print_next_seven_days $date_str_long | sed 's/^/    /g')

HERE
fi

echo $file_name
